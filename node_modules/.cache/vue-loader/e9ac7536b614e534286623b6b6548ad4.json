{"remainingRequest":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/components/Notes.vue?vue&type=template&id=59f8f241&","dependencies":[{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/components/Notes.vue","mtime":1614518636000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container\" }, [\n    _c(\"div\", { staticClass: \"icons\" }, [\n      _c(\n        \"svg\",\n        {\n          class: { active: this.$store.getters.getGrid },\n          attrs: {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            \"stroke-width\": \"2\",\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\"\n          },\n          on: {\n            click: function($event) {\n              return _vm.changeGrid(true)\n            }\n          }\n        },\n        [\n          _c(\"rect\", { attrs: { x: \"3\", y: \"3\", width: \"7\", height: \"7\" } }),\n          _c(\"rect\", { attrs: { x: \"14\", y: \"3\", width: \"7\", height: \"7\" } }),\n          _c(\"rect\", { attrs: { x: \"14\", y: \"14\", width: \"7\", height: \"7\" } }),\n          _c(\"rect\", { attrs: { x: \"3\", y: \"14\", width: \"7\", height: \"7\" } })\n        ]\n      ),\n      _c(\n        \"svg\",\n        {\n          class: { active: !this.$store.getters.getGrid },\n          attrs: {\n            xmlns: \"http://www.w3.org/2000/svg\",\n            width: \"24\",\n            height: \"24\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            \"stroke-width\": \"2\",\n            \"stroke-linecap\": \"round\",\n            \"stroke-linejoin\": \"round\"\n          },\n          on: {\n            click: function($event) {\n              return _vm.changeGrid(false)\n            }\n          }\n        },\n        [\n          _c(\"line\", { attrs: { x1: \"8\", y1: \"6\", x2: \"21\", y2: \"6\" } }),\n          _c(\"line\", { attrs: { x1: \"8\", y1: \"12\", x2: \"21\", y2: \"12\" } }),\n          _c(\"line\", { attrs: { x1: \"8\", y1: \"18\", x2: \"21\", y2: \"18\" } }),\n          _c(\"line\", { attrs: { x1: \"3\", y1: \"6\", x2: \"3\", y2: \"6\" } }),\n          _c(\"line\", { attrs: { x1: \"3\", y1: \"12\", x2: \"3\", y2: \"12\" } }),\n          _c(\"line\", { attrs: { x1: \"3\", y1: \"18\", x2: \"3\", y2: \"18\" } })\n        ]\n      )\n    ]),\n    _c(\n      \"div\",\n      { staticClass: \"notes\" },\n      _vm._l(_vm.notesFiltered, function(note, index) {\n        return _c(\n          \"div\",\n          {\n            key: index,\n            staticClass: \"note\",\n            class: [note.note.priority, { full: !_vm.grid }]\n          },\n          [\n            _c(\"div\", { staticClass: \"note-header\" }, [\n              _c(\n                \"p\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: note.title.titleShow,\n                      expression: \"note.title.titleShow\"\n                    }\n                  ],\n                  staticStyle: { cursor: \"pointer\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.editing(index, \"titleEditing\")\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(note.title.nameOfNote))]\n              ),\n              _c(\"br\"),\n              _c(\"br\"),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: note.title.additionalTitleVar,\n                    expression: \"note.title.additionalTitleVar\"\n                  },\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: note.title.hidenTitle,\n                    expression: \"note.title.hidenTitle\"\n                  }\n                ],\n                domProps: { value: note.title.additionalTitleVar },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      note.title,\n                      \"additionalTitleVar\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _c(\n                \"p\",\n                {\n                  staticStyle: { cursor: \"pointer\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.removeNote(index)\n                    }\n                  }\n                },\n                [_vm._v(\"x\")]\n              )\n            ]),\n            _c(\"div\", { staticClass: \"note-body\" }, [\n              _c(\n                \"p\",\n                {\n                  directives: [\n                    {\n                      name: \"show\",\n                      rawName: \"v-show\",\n                      value: note.description.descrShow,\n                      expression: \"note.description.descrShow\"\n                    }\n                  ],\n                  staticStyle: { cursor: \"pointer\" },\n                  on: {\n                    click: function($event) {\n                      return _vm.editing(index, \"descrEditing\")\n                    }\n                  }\n                },\n                [_vm._v(_vm._s(note.description.descrContent))]\n              ),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: note.description.additionalDescrVar,\n                    expression: \"note.description.additionalDescrVar\"\n                  },\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: note.description.hidenDescr,\n                    expression: \"note.description.hidenDescr\"\n                  }\n                ],\n                domProps: { value: note.description.additionalDescrVar },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.$set(\n                      note.description,\n                      \"additionalDescrVar\",\n                      $event.target.value\n                    )\n                  }\n                }\n              }),\n              _c(\"span\", [_vm._v(_vm._s(note.date))])\n            ])\n          ]\n        )\n      }),\n      0\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
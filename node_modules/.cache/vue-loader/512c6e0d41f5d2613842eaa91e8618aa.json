{"remainingRequest":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/components/NewNote.vue?vue&type=template&id=3f0406b2&","dependencies":[{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/components/NewNote.vue","mtime":1614581320000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"new-note\" }, [\n    _c(\"label\", [_vm._v(\"Title\")]),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.title.nameOfNote,\n          expression: \"title.nameOfNote\"\n        }\n      ],\n      attrs: { type: \"text\" },\n      domProps: { value: _vm.title.nameOfNote },\n      on: {\n        input: function($event) {\n          if ($event.target.composing) {\n            return\n          }\n          _vm.$set(_vm.title, \"nameOfNote\", $event.target.value)\n        }\n      }\n    }),\n    _c(\"label\", [_vm._v(\"Description\")]),\n    _c(\"textarea\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.description.descrContent,\n          expression: \"description.descrContent\"\n        }\n      ],\n      domProps: { value: _vm.description.descrContent },\n      on: {\n        input: function($event) {\n          if ($event.target.composing) {\n            return\n          }\n          _vm.$set(_vm.description, \"descrContent\", $event.target.value)\n        }\n      }\n    }),\n    _c(\"br\"),\n    _c(\"br\"),\n    _c(\n      \"button\",\n      { staticClass: \"btn btnPrimary\", on: { click: _vm.addNote } },\n      [_vm._v(\"New note\")]\n    ),\n    _c(\"div\", { staticClass: \"select\" }, [\n      _c(\n        \"select\",\n        {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.note.priority,\n              expression: \"note.priority\"\n            }\n          ],\n          on: {\n            change: function($event) {\n              var $$selectedVal = Array.prototype.filter\n                .call($event.target.options, function(o) {\n                  return o.selected\n                })\n                .map(function(o) {\n                  var val = \"_value\" in o ? o._value : o.value\n                  return val\n                })\n              _vm.$set(\n                _vm.note,\n                \"priority\",\n                $event.target.multiple ? $$selectedVal : $$selectedVal[0]\n              )\n            }\n          }\n        },\n        _vm._l(_vm.note.options, function(option) {\n          return _c(\n            \"option\",\n            { key: option.id, domProps: { value: option.value } },\n            [_vm._v(_vm._s(option.value))]\n          )\n        }),\n        0\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}
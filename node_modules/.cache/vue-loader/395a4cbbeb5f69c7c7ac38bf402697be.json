{"remainingRequest":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/components/NewNote.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/components/NewNote.vue","mtime":1613050999000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n  data() {\n    return {\n     note: {\n          priority: \"Low\",\n          options: [\n                { id: 1, value: 'Low' },\n                { id: 2, value: 'Medium' },\n                { id: 3, value: 'High' }\n                   ]\n      },\n        description: {\n         descrContent: \"\",\n         descrEditing: \"\",\n         hidenDescr: false,\n         descrShow: true,\n       },\n        title: {\n        nameOfNote: \"\",\n        hidenTitle: false,\n        titleShow: true,\n        titleEditing: false,\n        additionalTitleVar: \"\",\n              },\n         }\n  },\n\n\n   methods: {\n     addNote() {\n        if (this.title.nameOfNote === \"\") return false\n\n        let note = this.note\n        let title = this.title\n        let description = this.description\n\n        //Set note\n        this.$store.dispatch('setNote',\n         {\n         note,\n         title,\n         description,\n          date: new Date(Date.now()).toLocaleString()\n         });\n\n//Add note\n       this.$store.dispatch('addNote', {\n         note : this.$store.getters.getNote,\n         description: this.$store.getters.getDescription,\n         title: this.$store.getters.getTitle,\n         date: this.$store.getters.getDate\n         });\n\n//Reset\n       this.resetNote()\n     },\n\n    resetNote() {\n      this.note.priority ='Low'\n      this.title.nameOfNote = ''\n      this.description.descrContent = ' '\n    }\n\n   }\n}\n\n",{"version":3,"sources":["NewNote.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"NewNote.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"new-note\">\n      <label>Title</label>\n    <input v-model=\"title.nameOfNote\" type=\"text\"/>\n    <label>Description</label>\n    <textarea v-model=\"description.descrContent\"></textarea>\n    <button class=\"btn btnPrimary\" @click=\"addNote\">New note</button>\n\n    <!-- <p> {{ note.title.nameOfNote }} </p> -->\n\n    <div class=\"select\">\n     <select v-model=\"note.priority\">\n              <option\n              v-for=\"(option) in note.options\"\n              v-bind:value=\"option.value\"\n              :key=\"option.id\"\n               >{{ option.value }}</option>\n              <!-- <option>{{ this.note.options[index] }}</option> -->\n            </select>\n            <!-- <span>{{ note.options.value }}</span> -->\n\n            </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  data() {\n    return {\n     note: {\n          priority: \"Low\",\n          options: [\n                { id: 1, value: 'Low' },\n                { id: 2, value: 'Medium' },\n                { id: 3, value: 'High' }\n                   ]\n      },\n        description: {\n         descrContent: \"\",\n         descrEditing: \"\",\n         hidenDescr: false,\n         descrShow: true,\n       },\n        title: {\n        nameOfNote: \"\",\n        hidenTitle: false,\n        titleShow: true,\n        titleEditing: false,\n        additionalTitleVar: \"\",\n              },\n         }\n  },\n\n\n   methods: {\n     addNote() {\n        if (this.title.nameOfNote === \"\") return false\n\n        let note = this.note\n        let title = this.title\n        let description = this.description\n\n        //Set note\n        this.$store.dispatch('setNote',\n         {\n         note,\n         title,\n         description,\n          date: new Date(Date.now()).toLocaleString()\n         });\n\n//Add note\n       this.$store.dispatch('addNote', {\n         note : this.$store.getters.getNote,\n         description: this.$store.getters.getDescription,\n         title: this.$store.getters.getTitle,\n         date: this.$store.getters.getDate\n         });\n\n//Reset\n       this.resetNote()\n     },\n\n    resetNote() {\n      this.note.priority ='Low'\n      this.title.nameOfNote = ''\n      this.description.descrContent = ' '\n    }\n\n   }\n}\n\n</script>\n\n<style lang=\"scss\">\n.new-note   {\n    text-align: center;\n\n}\n.select {\n    margin-top: 25px;\n    margin-bottom: -10px;\n}\n</style>"]}]}
{"remainingRequest":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/babel-loader/lib/index.js!/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/store/note.js","dependencies":[{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/store/note.js","mtime":1597352844000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Date$now from \"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/@babel/runtime-corejs2/core-js/date/now\";\nexport default {\n  state: {\n    note: {\n      title: \"\",\n      description: \"\",\n      priority: \"\",\n      highPriority: false,\n      mediumPriority: false,\n      lowPriority: false,\n      message: null,\n      date: new Date(_Date$now()).toLocaleString()\n    }\n  },\n  mutations: {\n    resetNote: function resetNote(state) {\n      state.note.title = \"\";\n      state.note.description = \"\";\n      state.note.priority = \"\";\n      state.note.highPriority = false;\n      state.note.mediumPriority = false;\n      state.note.lowPriority = false;\n    },\n    changeMessage: function changeMessage(state, payload) {\n      state.note.message = payload;\n    }\n  },\n  actions: {\n    resetNote: function resetNote(_ref, payload) {\n      var commit = _ref.commit;\n      commit('resetNote', payload);\n    },\n    changeMessage: function changeMessage(_ref2, payload) {\n      var commit = _ref2.commit;\n      commit('changeMessage', payload);\n    }\n  },\n  getters: {\n    getNote: function getNote(state) {\n      return state.note;\n    },\n    getNewNoteMessage: function getNewNoteMessage(state) {\n      return state.note.message;\n    }\n  }\n};",{"version":3,"sources":["/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/store/note.js"],"names":["state","note","title","description","priority","highPriority","mediumPriority","lowPriority","message","date","Date","toLocaleString","mutations","resetNote","changeMessage","payload","actions","commit","getters","getNote","getNewNoteMessage"],"mappings":";AAAA,eAAe;AACXA,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAE,EADL;AAGFC,MAAAA,WAAW,EAAE,EAHX;AAKFC,MAAAA,QAAQ,EAAE,EALR;AAOFC,MAAAA,YAAY,EAAE,KAPZ;AASFC,MAAAA,cAAc,EAAE,KATd;AAWFC,MAAAA,WAAW,EAAE,KAXX;AAaFC,MAAAA,OAAO,EAAE,IAbP;AAeFC,MAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,WAAT,EAAqBC,cAArB;AAfJ;AADH,GADI;AAoBXC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SADO,qBACGb,KADH,EACU;AACbA,MAAAA,KAAK,CAACC,IAAN,CAAWC,KAAX,GAAmB,EAAnB;AACAF,MAAAA,KAAK,CAACC,IAAN,CAAWE,WAAX,GAAyB,EAAzB;AACAH,MAAAA,KAAK,CAACC,IAAN,CAAWG,QAAX,GAAsB,EAAtB;AACAJ,MAAAA,KAAK,CAACC,IAAN,CAAWI,YAAX,GAA0B,KAA1B;AACAL,MAAAA,KAAK,CAACC,IAAN,CAAWK,cAAX,GAA4B,KAA5B;AACAN,MAAAA,KAAK,CAACC,IAAN,CAAWM,WAAX,GAAyB,KAAzB;AACH,KARM;AASPO,IAAAA,aATO,yBASOd,KATP,EASce,OATd,EASuB;AAC1Bf,MAAAA,KAAK,CAACC,IAAN,CAAWO,OAAX,GAAqBO,OAArB;AACH;AAXM,GApBA;AAiCXC,EAAAA,OAAO,EAAE;AACLH,IAAAA,SADK,2BACiBE,OADjB,EAC0B;AAAA,UAAnBE,MAAmB,QAAnBA,MAAmB;AAC3BA,MAAAA,MAAM,CAAC,WAAD,EAAcF,OAAd,CAAN;AACH,KAHI;AAKLD,IAAAA,aALK,gCAKqBC,OALrB,EAK8B;AAAA,UAAnBE,MAAmB,SAAnBA,MAAmB;AAC/BA,MAAAA,MAAM,CAAC,eAAD,EAAkBF,OAAlB,CAAN;AACH;AAPI,GAjCE;AA0CXG,EAAAA,OAAO,EAAE;AACLC,IAAAA,OADK,mBACGnB,KADH,EACU;AACX,aAAOA,KAAK,CAACC,IAAb;AACH,KAHI;AAKLmB,IAAAA,iBALK,6BAKapB,KALb,EAKoB;AACrB,aAAOA,KAAK,CAACC,IAAN,CAAWO,OAAlB;AACH;AAPI;AA1CE,CAAf","sourcesContent":["export default {\n    state: {\n        note: {\n            title: \"\",\n\n            description: \"\",\n\n            priority: \"\",\n\n            highPriority: false,\n\n            mediumPriority: false,\n\n            lowPriority: false,\n\n            message: null,\n\n            date: new Date(Date.now()).toLocaleString()\n        }\n    },\n    mutations: {\n        resetNote(state) {\n            state.note.title = \"\"\n            state.note.description = \"\"\n            state.note.priority = \"\"\n            state.note.highPriority = false\n            state.note.mediumPriority = false\n            state.note.lowPriority = false\n        },\n        changeMessage(state, payload) {\n            state.note.message = payload\n        }\n    },\n    actions: {\n        resetNote({ commit }, payload) {\n            commit('resetNote', payload)\n        },\n\n        changeMessage({ commit }, payload) {\n            commit('changeMessage', payload)\n        }\n    },\n    getters: {\n        getNote(state) {\n            return state.note\n        },\n\n        getNewNoteMessage(state) {\n            return state.note.message\n        }\n    },\n\n}"]}]}
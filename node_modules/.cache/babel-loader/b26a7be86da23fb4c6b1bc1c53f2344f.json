{"remainingRequest":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/babel-loader/lib/index.js!/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/store/modules/notes.js","dependencies":[{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/store/modules/notes.js","mtime":1612975210000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _objectSpread from \"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _Object$assign from \"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/@babel/runtime-corejs2/core-js/object/assign\";\nimport _Date$now from \"/Volumes/HDD/Programming/tocode.ru/notes-vuex/node_modules/@babel/runtime-corejs2/core-js/date/now\";\nexport default {\n  state: {\n    notesLoaded: [],\n    notes: [{\n      note: {\n        priority: \"Low\",\n        options: [{\n          id: 1,\n          value: 'Low'\n        }, {\n          id: 2,\n          value: 'Medium'\n        }, {\n          id: 3,\n          value: 'High'\n        }]\n      },\n      description: {\n        descrContent: \"Description for first note\",\n        descrEditing: 'descrEditing',\n        hidenDescr: false,\n        descrShow: true\n      },\n      title: {\n        nameOfNote: \"First note\",\n        hidenTitle: false,\n        titleShow: true,\n        additionalTitleVar: \"\"\n      },\n      date: new Date(_Date$now()).toLocaleString()\n    }],\n    note: null\n  },\n  computed: {\n    getNotess: function getNotess() {\n      this.$store.dispatch('getNotes');\n    }\n  },\n  mutations: {\n    addNote: function addNote(state, _ref) {\n      var payload = _Object$assign({}, _ref);\n\n      console.log('payload from addNote mutation: ', _objectSpread({}, payload.title), _objectSpread({}, payload.note), _objectSpread({}, payload.description)); // this.note = payload\n      // console.log(payload.title.nameOfNote)\n\n      state.notes.push({\n        title: _objectSpread({}, payload.title),\n        note: _objectSpread({}, payload.note),\n        description: _objectSpread({}, payload.description),\n        date: payload.date\n      });\n      console.log(state.notes); // payload.description.descrContent = \"\",\n      // payload.priority = undefined\n    },\n    setNote: function setNote(state, note) {\n      state.note = note;\n    },\n    removeNote: function removeNote(state, payload) {\n      state.notes.splice(payload, 1);\n    }\n  },\n  actions: {\n    pushNewNote: function pushNewNote(_ref2, payload) {\n      var commit = _ref2.commit;\n      commit('pushNewNote', payload);\n    },\n    removeNote: function removeNote(_ref3, payload) {\n      var commit = _ref3.commit;\n      commit('removeNote', payload);\n    },\n    addNote: function addNote(_ref4, _ref5) {\n      var commit = _ref4.commit;\n\n      var payload = _Object$assign({}, _ref5);\n\n      console.log('payload from addNoteAction: ', _objectSpread({}, payload));\n      commit('addNote', _objectSpread({}, payload));\n    },\n    setNote: function setNote(_ref6, note) {\n      var commit = _ref6.commit;\n      commit('setNote', note);\n    },\n    setNotesLoaded: function setNotesLoaded(_ref7) {\n      var commit = _ref7.commit;\n      commit('setNotesLoaded');\n    }\n  },\n  getters: {\n    getNotes: function getNotes(state) {\n      return state.notes;\n    },\n    getNotesLoaded: function getNotesLoaded(state) {\n      return state.notesLoaded;\n    }\n  }\n};",{"version":3,"sources":["/Volumes/HDD/Programming/tocode.ru/notes-vuex/src/store/modules/notes.js"],"names":["state","notesLoaded","notes","note","priority","options","id","value","description","descrContent","descrEditing","hidenDescr","descrShow","title","nameOfNote","hidenTitle","titleShow","additionalTitleVar","date","Date","toLocaleString","computed","getNotess","$store","dispatch","mutations","addNote","payload","console","log","push","setNote","removeNote","splice","actions","pushNewNote","commit","setNotesLoaded","getters","getNotes","getNotesLoaded"],"mappings":"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","sourcesContent":["export default {\n    state: {\n        notesLoaded: [],\n        notes: [{\n                note: {\n                    priority: \"Low\",\n                    options: [\n                        { id: 1, value: 'Low' },\n                        { id: 2, value: 'Medium' },\n                        { id: 3, value: 'High' }\n                    ]\n                },\n\n                description: {\n                    descrContent: \"Description for first note\",\n                    descrEditing: 'descrEditing',\n                    hidenDescr: false,\n                    descrShow: true,\n                },\n                title: {\n                    nameOfNote: \"First note\",\n                    hidenTitle: false,\n                    titleShow: true,\n                    additionalTitleVar: \"\",\n                },\n                date: new Date(Date.now()).toLocaleString()\n            },\n            // {\n            //     priority: \"Low\",\n\n            //     description: {\n\n            //         descrContent: \"Description for second note\",\n            //         descrEditing: 'descrEditing',\n            //         hidenDescr: false,\n            //         descrShow: true,\n            //     },\n            //     title: {\n            //         nameOfNote: \"Second note\",\n            //         date: new Date(Date.now()).toLocaleString(),\n            //         hidenTitle: false,\n            //         titleShow: true,\n            //         additionalTitleVar: \"\",\n            //     },\n            //     date: new Date(Date.now()).toLocaleString()\n            // },\n            // {\n            //     priority: \"Low\",\n\n            //     description: {\n\n            //         descrContent: \"Description for third note\",\n            //         descrEditing: 'descrEditing',\n            //         hidenDescr: false,\n            //         descrShow: true,\n            //     },\n            //     title: {\n            //         nameOfNote: \"Second note\",\n            //         date: new Date(Date.now()).toLocaleString(),\n            //         hidenTitle: false,\n            //         titleShow: true,\n            //         additionalTitleVar: \"\",\n            //     },\n            //     date: new Date(Date.now()).toLocaleString()\n            // },\n        ],\n        note: null\n    },\n\n    computed: {\n        getNotess() {\n            this.$store.dispatch('getNotes')\n        }\n    },\n\n    mutations: {\n\n        addNote(state, {...payload }) {\n            console.log('payload from addNote mutation: ', {...payload.title }, {...payload.note }, {...payload.description })\n                // this.note = payload\n                // console.log(payload.title.nameOfNote)\n\n            state.notes.push({\n                title: {...payload.title },\n                note: {...payload.note },\n                description: {...payload.description },\n                date: payload.date\n            })\n            console.log(state.notes)\n\n\n            // payload.description.descrContent = \"\",\n            // payload.priority = undefined\n\n        },\n        setNote(state, note) {\n            state.note = note\n        },\n        removeNote(state, payload) {\n            state.notes.splice(payload, 1)\n        },\n        // setNotesLoaded(state) {\n        //     state.notes = state.notesLoaded\n        // }\n\n\n\n    },\n    actions: {\n        pushNewNote({ commit }, payload) {\n            commit('pushNewNote', payload)\n        },\n        removeNote({ commit }, payload) {\n            commit('removeNote', payload)\n        },\n        addNote({ commit }, {...payload }) {\n            console.log('payload from addNoteAction: ', {...payload })\n            commit('addNote', {...payload })\n        },\n        setNote({ commit }, note) {\n            commit('setNote', note)\n        },\n\n        setNotesLoaded({ commit }) {\n            commit('setNotesLoaded')\n        },\n\n    },\n    getters: {\n        getNotes(state) {\n            return state.notes\n        },\n\n        getNotesLoaded(state) {\n            return state.notesLoaded\n        }\n\n    },\n}"]}]}